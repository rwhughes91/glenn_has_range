{
  "swagger": "2.0",
  "basePath": "/api",
  "paths": {
    "/auth/login": {
      "post": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Logs a user in",
        "operationId": "user login",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/auth_details"
            }
          }
        ],
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/logout": {
      "post": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Logs a user out",
        "operationId": "logout a user",
        "tags": [
          "auth"
        ]
      }
    },
    "/playlists/": {
      "post": {
        "responses": {
          "201": {
            "description": "Playlist successfully created"
          },
          "400": {
            "description": "Playlist already exists"
          }
        },
        "summary": "Creates a new Playlist",
        "operationId": "create a new playlist",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/playlist"
            }
          },
          {
            "name": "X-Fields",
            "in": "header",
            "type": "string",
            "format": "mask",
            "description": "An optional fields mask"
          }
        ],
        "tags": [
          "playlist"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/playlist"
              }
            }
          }
        },
        "summary": "List all playlists",
        "operationId": "list all playlists",
        "parameters": [
          {
            "name": "X-Fields",
            "in": "header",
            "type": "string",
            "format": "mask",
            "description": "An optional fields mask"
          }
        ],
        "tags": [
          "playlist"
        ]
      }
    },
    "/playlists/{playlist_id}": {
      "parameters": [
        {
          "in": "path",
          "description": "The playlist identifier",
          "name": "playlist_id",
          "required": true,
          "type": "string"
        }
      ],
      "put": {
        "responses": {
          "200": {
            "description": "Playlist successfully edited"
          },
          "400": {
            "description": "Playlist_id must be a valid UUID"
          },
          "201": {
            "description": "Playlist successfully created"
          }
        },
        "summary": "Edit or create a playlist by the identifier passed",
        "operationId": "edit a playlist",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/playlist"
            }
          },
          {
            "name": "X-Fields",
            "in": "header",
            "type": "string",
            "format": "mask",
            "description": "An optional fields mask"
          }
        ],
        "tags": [
          "playlist"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/playlist"
            }
          },
          "404": {
            "description": "Playlist not found"
          }
        },
        "summary": "Get a playlist by the identifier passed",
        "operationId": "get a playlist",
        "parameters": [
          {
            "name": "X-Fields",
            "in": "header",
            "type": "string",
            "format": "mask",
            "description": "An optional fields mask"
          }
        ],
        "tags": [
          "playlist"
        ]
      }
    },
    "/users/": {
      "post": {
        "responses": {
          "201": {
            "description": "User successfully created"
          },
          "400": {
            "description": "User already exists"
          }
        },
        "summary": "Creates a new User",
        "operationId": "create a new user",
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          {
            "name": "X-Fields",
            "in": "header",
            "type": "string",
            "format": "mask",
            "description": "An optional fields mask"
          }
        ],
        "tags": [
          "user"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/user"
              }
            }
          }
        },
        "summary": "List all registered users",
        "operationId": "list all users",
        "parameters": [
          {
            "name": "X-Fields",
            "in": "header",
            "type": "string",
            "format": "mask",
            "description": "An optional fields mask"
          }
        ],
        "tags": [
          "user"
        ]
      }
    },
    "/users/{public_id}": {
      "parameters": [
        {
          "in": "path",
          "description": "The User identifier",
          "name": "public_id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "responses": {
          "404": {
            "description": "User not found"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        },
        "summary": "Get a user by the identifier passed",
        "operationId": "get a user",
        "parameters": [
          {
            "name": "X-Fields",
            "in": "header",
            "type": "string",
            "format": "mask",
            "description": "An optional fields mask"
          }
        ],
        "tags": [
          "user"
        ]
      }
    }
  },
  "info": {
    "title": "Glenn has range API",
    "version": "1.0",
    "description": "A RESTful Flask web service for Spotify playlists"
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "tags": [
    {
      "name": "user",
      "description": "user related operations"
    },
    {
      "name": "playlist",
      "description": "Spotify playlist operations"
    },
    {
      "name": "auth",
      "description": "authentication related operations"
    }
  ],
  "definitions": {
    "user": {
      "required": [
        "email",
        "password",
        "username"
      ],
      "properties": {
        "email": {
          "type": "string",
          "description": "user email address"
        },
        "username": {
          "type": "string",
          "description": "user username"
        },
        "password": {
          "type": "string",
          "description": "user password"
        },
        "public_id": {
          "type": "string",
          "description": "user identifier"
        }
      },
      "type": "object"
    },
    "playlist": {
      "required": [
        "datasource",
        "playlist_link",
        "screen_name"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "playlist identifier"
        },
        "datasource": {
          "type": "string",
          "description": "playlist data source"
        },
        "screen_name": {
          "type": "string",
          "description": "playlist screen name"
        },
        "playlist_link": {
          "type": "string",
          "description": "link to visit playlist"
        },
        "playlist_description": {
          "type": "string",
          "description": "playlist description"
        }
      },
      "type": "object"
    },
    "auth_details": {
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "description": "The email address"
        },
        "password": {
          "type": "string",
          "description": "The user password"
        }
      },
      "type": "object"
    }
  },
  "responses": {
    "ParseError": {
      "description": "When a mask can't be parsed"
    },
    "MaskError": {
      "description": "When any error occurs on mask"
    }
  },
  "host": "localhost:5000"
}